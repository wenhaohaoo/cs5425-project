---
version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,CONNECTIONS_FROM_HOST://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONNECTIONS_FROM_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "broker:9092", "--list"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  mongo:
    image: mongo:5.0.7
    ports:
      - "27017:27017"
    volumes:
      - ./data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  producer:
    build: producer
    depends_on:
      broker:
        condition: service_healthy
    environment:
      CONSUMER_KEY: {CONSUMER_KEY}
      CONSUMER_SECRET: {CONSUMER_SECRET}
      ACCESS_TOKEN: {ACCESS_TOKEN}
      ACCESS_TOKEN_SECRET: {ACCESS_TOKEN_SECRET}
      KAFKA_BROKER_CONNECT: 'broker:9092'

  consumer_sg:
    build: consumer
    depends_on: 
      mongo:
        condition: service_healthy
    environment:
      KAFKA_BROKER_CONNECT: 'broker:9092'
      KAFKA_TOPIC: 'sg'
      MONGODB_CONNECT: 'mongodb://mongo:27017'
      MONGODB_USERNAME: 'root'
      MONGODB_PASSWORD: 'root'
    volumes:
      - ./model:/workspace/model
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            device_ids: ['0']
            capabilities: [gpu]
